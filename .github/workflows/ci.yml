name: Cross-Browser Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          playwright install --with-deps

      - name: Run tests
        run: |
          PW_BROWSER=${{ matrix.browser }} pytest tests --alluredir=allure-results --browser=${{ matrix.browser }}
      
      - name: Add environment info to Allure results
        run: |
          echo "Browser=${{ matrix.browser }}" > allure-results/environment.properties
          
      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results

  report-merge:
    name: Merge & Upload Allure Report
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          path: merged-results

      - name: Merge Allure Results
        run: |
          mkdir -p final-results
          find merged-results -type f ! -name "environment.properties" -exec cp {} final-results/ \;
          echo "" > final-results/environment.properties
          i=1
          for envfile in $(find merged-results -name "environment.properties"); do
            while IFS= read -r line; do
              # Split line into key and value
              key=$(echo "$line" | cut -d '=' -f 1)
              value=$(echo "$line" | cut -d '=' -f 2-)
              # Write to merged file with unique key
              echo "${key}_${i}=${value}" >> final-results/environment.properties
            done < "$envfile"
            i=$((i+1))
          done

      - name: Generate Allure HTML Report
        run: |
          pip install allure-pytest
          npm install -g allure-commandline --save-dev
          echo "REPORT_TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
          allure generate final-results --clean -o allure-report

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report-${{ env.REPORT_TIMESTAMP }}


      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }} # Ensure this secret is set in your repository/organization secrets, or replace with actual channel ID
          payload: |
            {
              "text": "âœ… TestPilot-AI CI tests completed. [Click here to download the report artifact](https://phoenix2rise.github.io/TestPilot-AI/allure-report-${{ env.REPOR_TTIMESTAMP }}/index.html)"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
